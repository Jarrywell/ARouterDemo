if (isNeedTestModule1.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}


def config = rootProject.ext

android {
    compileSdkVersion config.android.compileSdkVersion
    defaultConfig {
        if (!isNeedTestModule1.toBoolean()) {
            applicationId "com.android.test.module1"
        }
        minSdkVersion config.android.minSdkVersion
        targetSdkVersion config.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            if (!isNeedTestModule1.toBoolean()) {
                manifest.srcFile 'src/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'

                java {
                    exclude '**/debug/**'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation config.dependencies["appcompat-v7"]
    testImplementation config.dependencies["junit"]
    androidTestImplementation config.dependencies["runner"]
    androidTestImplementation config.dependencies["espresso"]

    //retrofit
    /*implementation rootProject.ext.dependencies['retrofit']
    implementation rootProject.ext.dependencies['retrofit-convert-gson']
    implementation rootProject.ext.dependencies['retrofit-adapter-rxjava']
    implementation rootProject.ext.dependencies['retrofit-adapter-java8']*/
}
